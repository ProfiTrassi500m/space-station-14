// WeaponAttachmentSystem.cs
public sealed class WeaponAttachmentSystem : EntitySystem
{
    public override void Initialize()
    {
        SubscribeLocalEvent<WeaponAttachmentComponent, ComponentStartup>(OnAttachmentAdded);
        SubscribeLocalEvent<WeaponAttachmentComponent, ComponentRemove>(OnAttachmentRemoved);
    }

    private void OnAttachmentAdded(EntityUid uid, WeaponAttachmentComponent component, ComponentStartup args)
    {
        if (!TryComp<GunComponent>(uid, out var gun) || !TryComp<ItemComponent>(uid, out var item))
            return;

        // Применяем модификаторы к оружию
        if (component.Modifiers.TryGetValue("Gun", out var gunMods))
        {
            gun.FireRate *= gunMods.GetValueOrDefault("fireRateMultiplier", 1f);
            gun.Recoil *= gunMods.GetValueOrDefault("recoilMultiplier", 1f);
        }
    }

    private void OnAttachmentRemoved(EntityUid uid, WeaponAttachmentComponent component, ComponentRemove args)
    {
        // Возвращаем оригинальные параметры
    }
}